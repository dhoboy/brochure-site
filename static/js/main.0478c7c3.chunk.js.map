{"version":3,"sources":["images/Drew_Grasty.jpg","images/Pouring.jpg","components/Header.js","history.js","components/MenuBarItem.js","components/MenuBar.js","components/Home.js","components/HowItWorks.js","components/Contact.js","components/Testimonials.js","AppRoutes.js","components/Footer.js","App.js","serviceWorker.js","index.js"],"names":["module","exports","Header","createBrowserHistory","className","MenuBarItem","display","path","activeClassName","to","MenuBar","routePrefix","Home","style","backgroundImage","Drew_Grasty","HowItWorks","Pouring","Contact","Testimonials","AppRoutes","exact","render","routeProps","Footer","App","hashType","basename","id","Boolean","window","location","hostname","match","ReactDOM","StrictMode","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","console","message"],"mappings":"wGAAAA,EAAOC,QAAU,IAA0B,yC,mBCA3CD,EAAOC,QAAU,IAA0B,qC,gLCqB5BC,GCpBAC,cDCA,WACb,OACE,yBAAKC,UAAU,UACb,2CACA,4BACE,2BACE,6CACA,qCAEF,2BACE,yCACA,0CACA,6CECKC,EAZK,SAAC,GAAuB,IAArBC,EAAoB,EAApBA,QAASC,EAAW,EAAXA,KAC9B,OACE,kBAAC,IAAD,CACEH,UAAU,gBACVI,gBAAgB,UAChBC,GAAIF,GAEHD,ICIQI,EAXC,SAAC,GAAqB,IAAnBC,EAAkB,EAAlBA,YACjB,OACE,yBAAKP,UAAU,YACb,kBAAC,EAAD,CAAaE,QAAQ,OAAOC,KAAK,QAAQI,YAAaA,IACtD,kBAAC,EAAD,CAAaL,QAAQ,eAAeC,KAAK,gBAAgBI,YAAaA,IACtE,kBAAC,EAAD,CAAaL,QAAQ,UAAUC,KAAK,WAAWI,YAAaA,IAC5D,kBAAC,EAAD,CAAaL,QAAQ,eAAeC,KAAK,gBAAgBI,YAAaA,M,wBCE7DC,EARF,WACX,OACE,yBAAKR,UAAU,QACb,yBAAKA,UAAU,QAAQS,MAAO,CAAEC,gBAAgB,OAAD,OAASC,U,iBCmB/CC,EAtBI,WACjB,OACE,yBAAKZ,UAAU,gBACb,yBAAKA,UAAU,QAAQS,MAAO,CAAEC,gBAAgB,OAAD,OAASG,QACxD,2BACE,uHAGA,2HAGA,sHAGA,yFCPOC,EARC,WACd,OACE,yBAAKd,UAAU,WAAf,kDCaWe,EAfM,WACnB,OACE,yBAAKf,UAAU,gBACb,2BACE,qTAKA,gDC6BOgB,EAjCG,WAChB,OACE,kBAAC,IAAD,KACE,kBAAC,IAAD,CACEC,OAAK,EACLd,KAAK,IACLe,OAAQ,SAAAC,GAAU,OAAI,kBAAC,IAAD,iBAAcA,EAAd,CAA0Bd,GAAG,cAErD,kBAAC,IAAD,CACEY,OAAK,EACLd,KAAK,kBACLe,OAAQ,SAAAC,GAAU,OAAI,kBAAC,IAAD,iBAAcA,EAAd,CAA0Bd,GAAG,cAErD,kBAAC,IAAD,CACEF,KAAK,QACLe,OAAQ,SAAAC,GAAU,OAAI,kBAAC,EAAUA,MAEnC,kBAAC,IAAD,CACEhB,KAAK,gBACLe,OAAQ,SAAAC,GAAU,OAAI,kBAAC,EAAeA,MAExC,kBAAC,IAAD,CACEhB,KAAK,WACLe,OAAQ,SAAAC,GAAU,OAAI,kBAAC,EAAYA,MAErC,kBAAC,IAAD,CACEhB,KAAK,gBACLe,OAAQ,SAAAC,GAAU,OAAI,kBAAC,EAAiBA,QCxBjCC,EARA,WACb,OACE,yBAAKpB,UAAU,UACb,6DCqBSqB,G,MAjBH,WACV,OACE,kBAAC,IAAD,CAAYC,SAAS,UAAUC,SAAU,eACvC,yBAAKC,GAAG,iBACN,kBAAC,EAAD,MACA,yBAAKxB,UAAU,gBACb,kBAAC,EAAD,MACA,yBAAKA,UAAU,QACb,kBAAC,EAAD,QAGJ,kBAAC,EAAD,UCRYyB,QACW,cAA7BC,OAAOC,SAASC,UAEe,UAA7BF,OAAOC,SAASC,UAEhBF,OAAOC,SAASC,SAASC,MACvB,2DCZNC,IAASZ,OACP,kBAAC,IAAMa,WAAP,KACE,kBAAC,EAAD,OAEFC,SAASC,eAAe,SDyHpB,kBAAmBC,WACrBA,UAAUC,cAAcC,MACrBC,MAAK,SAAAC,GACJA,EAAaC,gBAEdC,OAAM,SAAAC,GACLC,QAAQD,MAAMA,EAAME,c","file":"static/js/main.0478c7c3.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/Drew_Grasty.b68d3265.jpg\";","module.exports = __webpack_public_path__ + \"static/media/Pouring.31b90b23.jpg\";","import React from 'react';\n\nconst Header = () => {\n  return (\n    <div className=\"header\">\n      <h1>Drew Grasty</h1>\n      <h2>\n        <p>\n          <span>Tea Service</span>\n          <span>//</span>\n        </p>\n        <p>\n          <span>Parties</span> \n          <span>Weddings</span>\n          <span>Events</span>\n        </p>\n      </h2>\n    </div>\n  )\n};\n\nexport default Header;\n","import { createBrowserHistory } from \"history\";\nexport default createBrowserHistory();\n","import React from 'react';\nimport { NavLink } from 'react-router-dom';\n\nconst MenuBarItem = ({ display, path }) => {\n  return (\n    <NavLink \n      className=\"menu-bar-item\" \n      activeClassName=\"current\" \n      to={path}\n    >\n      {display}\n    </NavLink>\n  )\n};\n\nexport default MenuBarItem;\n","import React from 'react';\nimport MenuBarItem from './MenuBarItem';\n\nconst MenuBar = ({ routePrefix }) => {\n  return (\n    <div className=\"menu-bar\">\n      <MenuBarItem display=\"Home\" path=\"/home\" routePrefix={routePrefix} />\n      <MenuBarItem display=\"How It Works\" path=\"/how-it-works\" routePrefix={routePrefix} />\n      <MenuBarItem display=\"Contact\" path=\"/contact\" routePrefix={routePrefix} />\n      <MenuBarItem display=\"Testimonials\" path=\"/testimonials\" routePrefix={routePrefix} />\n    </div>\n  );\n};\n\nexport default MenuBar;\n","import React from 'react';\nimport Drew_Grasty from '../images/Drew_Grasty.jpg';\n\nconst Home = () => {\n  return (\n    <div className=\"home\">\n      <div className=\"photo\" style={{ backgroundImage: `url(${Drew_Grasty}` }}></div>\n    </div>\n  );\n}\n\nexport default Home;\n","import React from 'react';\nimport Pouring from '../images/Pouring.jpg';\n\nconst HowItWorks = () => {\n  return (\n    <div className=\"how-it-works\">\n      <div className=\"photo\" style={{ backgroundImage: `url(${Pouring}` }}></div>\n      <p>\n        <span>\n          I source teas directly from Taiwan, Japan, and China, and prepare them at your event.\n        </span>\n        <span>\n          I offer you and your guests a full service tea experience, using all of my own equipment.\n        </span>\n        <span>\n          Get the conversation started at your next event by offering your guests tea service.\n        </span>\n        <span>\n          Ideal for guests who want an alternative to alcohol.\n        </span>\n      </p>\n    </div>\n  );\n};\n\nexport default HowItWorks;\n","import React from 'react';\n\nconst Contact = () => {\n  return (\n    <div className=\"contact\">\n      You may reach me at [emailAddressWillGoHere]!\n    </div>\n  );\n};\n\nexport default Contact;\n","import React from 'react';\n\nconst Testimonials = () => {\n  return (\n    <div className=\"testimonials\">\n      <p>\n        <span>\n          Drew Grasty provided an excellent tea experience at our Wedding Reception.\n          The guests couldn't stop talking about it, they had never seen anything like it!\n          Drew is a professional; He set up his station and we enjoyed a smooth evening complete with tea service all night long!\n        </span>\n        <span>- Daniel O.</span>\n      </p>\n    </div>\n  );\n};\n\nexport default Testimonials;\n","import React from 'react';\nimport { Route, Switch, Redirect } from 'react-router-dom';\nimport Home from './components/Home';\nimport HowItWorks from './components/HowItWorks';\nimport Contact from './components/Contact';\nimport Testimonials from './components/Testimonials';\n\nconst AppRoutes = () => {\n  return (\n    <Switch>\n      <Route \n        exact\n        path=\"/\"\n        render={routeProps => <Redirect {...routeProps} to=\"/home\" />}\n      />\n      <Route \n        exact\n        path=\"/brochure-site/\"\n        render={routeProps => <Redirect {...routeProps} to=\"/home\" />}\n      />\n      <Route \n        path=\"/home\"\n        render={routeProps => <Home { ...routeProps} />}\n      />\n      <Route \n        path=\"/how-it-works\"\n        render={routeProps => <HowItWorks {...routeProps} />}\n      />\n      <Route \n        path=\"/contact\"\n        render={routeProps => <Contact {...routeProps} />}\n      />\n      <Route \n        path=\"/testimonials\"\n        render={routeProps => <Testimonials {...routeProps} />}\n      />\n    </Switch>\n  );\n};\n\nexport default AppRoutes;\n","import React from 'react';\n\nconst Footer = () => {\n  return (\n    <div className=\"footer\">\n      <span>Based in Portland, Oregon</span>\n    </div>\n  )\n};\n\nexport default Footer;\n","import React from 'react';\nimport { HashRouter } from \"react-router-dom\";\nimport history from './history';\nimport Header from './components/Header';\nimport MenuBar from './components/MenuBar';\nimport AppRoutes from './AppRoutes';\nimport Footer from './components/Footer';\nimport './scss/app.scss';\n\nconst App = () => {\n  return (\n    <HashRouter hashType=\"noslash\" basename={'drew-grasty'}>\n      <div id=\"brochure-site\">\n        <Header />\n        <div className=\"main-content\">\n          <MenuBar />\n          <div className=\"page\">\n            <AppRoutes />\n          </div>\n        </div>\n        <Footer />\n      </div>\n    </HashRouter>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}